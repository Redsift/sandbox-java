machine:
  environment:
    CONTAINER_NAME: quay.io/redsift/sandbox-java
    JAVA_VERSIONS: 8
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.0-circleci'
    - sudo chmod 0755 /usr/bin/docker
  services:
    - docker

dependencies:
  override:
    - docker info
    - |
      set -e
      # Build java 8
      docker build -t 8 -f Dockerfile .
      
test:
  override:
    - |
      set -e
      for JV in $JAVA_VERSIONS
      do
        INIT=$(docker inspect -f "{{index .ContainerConfig.Labels \"io.redsift.dagger.init\" }}" $JV)
        echo "Calling init = $INIT"
        docker run -v $PWD/test:/run/dagger/sift $JV $INIT 0 1 2
        ls -A $PWD/test/server || true
        ls -A $PWD/test/server/inner || true
        RUN=$(docker inspect -f "{{index .ContainerConfig.Labels \"io.redsift.dagger.run\" }}" $JV)
        echo "Calling run = $RUN"
        docker run -v $PWD/test:/run/dagger/sift -e DRY=true $JV $RUN 0 1 2
        sudo rm -Rf $PWD/test/server/*.class $PWD/test/server/*.jar || true
      done
  
deployment:
  production:
    branch: master  
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - | 
        set -e
        for JV in $JAVA_VERSIONS
        do
          JAVA_VERSION=$(docker run -t --entrypoint=/usr/bin/java $JV -version 2>&1 | cut -s -d '"' -f2)
          VERSION_ARRAY=(${JAVA_VERSION//_/ })
          VERSION=v${VERSION_ARRAY[0]}
          MAJOR_NUMBER=(${VERSION//./ })
          MAJOR_VERSION=$MAJOR_NUMBER
          echo "Tagging as $CONTAINER_NAME:$VERSION"
          docker tag $JV:latest $CONTAINER_NAME:$VERSION
          echo "Tagging as $CONTAINER_NAME:$MAJOR_VERSION"
          docker tag $JV:latest $CONTAINER_NAME:$MAJOR_VERSION
        done
        docker push $CONTAINER_NAME
